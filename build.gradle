plugins {
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.10'
    id 'org.jetbrains.kotlin.jvm' version '1.6.10'
}

group 'com.home.com.nir'
version '1.0-SNAPSHOT'

sourceCompatibility = 11

repositories {
    mavenCentral()
}

sourceSets {
    main.java.srcDirs = ['src/main/java', 'src/main/kotlin']
    main.kotlin.srcDirs = ['src/main/java', 'src/main/kotlin']
    main.resources.srcDirs = ['src/main/resources']
}

sourceSets {
    test.java.srcDirs = ['src/test/java', 'src/test/kotlin']
    test.kotlin.srcDirs = ['src/test/java', 'src/test/kotlin']
    test.resources.srcDirs = ['src/test/resources']
}

def javaFXPlatform = getJavaFXPlatform()
def javaFXVersion = "17.0.1"

dependencies {
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.2'

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'

    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.13.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.0'
    implementation 'com.google.guava:guava:28.1-jre'
    implementation 'org.apache.commons:commons-lang3:3.9'
    implementation 'io.projectreactor:reactor-core:3.3.0.RELEASE'

    implementation 'de.gsi.chart:chartfx-chart:11.1.3'
    implementation 'mysql:mysql-connector-java:8.0.19'
    implementation 'net.objecthunter:exp4j:0.4.8'
}

compileKotlin {
    kotlinOptions.jvmTarget = "11"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "11"
}

test {
    useJUnitPlatform()
}

/*
Cross-platform projects and libraries:
JavaFX modules require native binaries for each platform. The plugin only includes binaries for the platform running
the build. By declaring the dependency configuration compileOnly, the native binaries will not be included. You will
need to provide those separately during deployment for each target platform.
* */
javafx {
    version = '17'
    modules = [ 'javafx.base', 'javafx.controls', 'javafx.fxml', 'javafx.graphics' ]
    configuration = 'implementation'
}

private static String getJavaFXPlatform() {
    def currentOS = org.gradle.nativeplatform.platform.internal.DefaultNativePlatform.currentOperatingSystem;
    if (currentOS.isWindows()) {
        return 'win'
    } else if (currentOS.isLinux()) {
        return 'linux'
    } else if (currentOS.isMacOsX()) {
        return 'mac'
    }
    return null
}

mainClassName = "com.nir.SolutionPlotCheck"
